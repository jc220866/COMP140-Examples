When a function's name implies it does one task while its functionality does another, it is regarded as a poorly named function. The Single Responsibility Principle (SRP) states that the exact same rule applies to classes too. A class named Player would imply that it keeps track of the player and everything about the player, but when this class is also generating weapons for the player, it can cause confusion and uncertainty.

Currently, our player class is generating a weapon. I believe it's acceptable for the player class to hold a function that displays the stats of the weapon the player is currently holding, but according to the SRP, the action of generating a weapon and giving it to the player should be handled by a separate class entirely. It is arguable that the randomization of the player's stats should also be handled by a separate class, though they should certainly be tracked by and contained inside of the player class.

According to the SRP, the functionality of generating weapons (and arguably randomizing player statistics) should be contained within a separate class from Player(). My plan is to create a new class called Weapons, which will generate weapons, keep track of all possible weapons that could be generated and keep track of the statistics of each player's weapon. A function along the lines of "GetWeaponStats()" could be contained within the Weapons() class, while taking in an argument specifying the player who's weapons' stats we would want to return.